/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CacheManagerAutomation,
  CacheManagerAutomationInterface,
} from "../../cacheManagerAutomation/CacheManagerAutomation";

const _abi = [
  {
    inputs: [],
    name: "ContractAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxUserFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBid",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFundAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyBids",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyContracts",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "BalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "BidAttempted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "BidDetails",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "BidError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
    ],
    name: "ContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ContractOperationPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "ContractRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
    ],
    name: "MinBidCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalContracts",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "successfulBids",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "failedBids",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UpkeepPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UserBalanceOperation",
    type: "event",
  },
  {
    inputs: [],
    name: "arbWasmCache",
    outputs: [
      {
        internalType: "contract IArbWasmCache",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cacheManager",
    outputs: [
      {
        internalType: "contract ICacheManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "escrow",
    outputs: [
      {
        internalType: "contract BiddingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxBid",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "enabled",
                type: "bool",
              },
            ],
            internalType: "struct ICacheManagerAutomationV2.ContractConfig[]",
            name: "contracts",
            type: "tuple[]",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.UserContractsData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserContracts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBid",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.ContractConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cacheManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbWasmCache",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "insertContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.BidRequest[]",
        name: "_bidRequests",
        type: "tuple[]",
      },
    ],
    name: "placeBids",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAllContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "removeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "updateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userContracts",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015601357600080fd5b506080516131ff61004b600039600081816105440152818161058d01528181610a9c01528181610adc0152610b6f01526131ff6000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c3a2a93a1161006f578063c3a2a93a14610303578063dfc41f4414610325578063e2fdcc1714610347578063e8cc05d714610367578063f2fde38b14610387578063fb5842f3146103a757600080fd5b8063715018a6146102545780638da5cb5b14610269578063b7013dc114610287578063b789003d1461029c578063c375c2ef146102e357600080fd5b8063485cc955116100f2578063485cc955146101ac5780634f1ef286146101cc57806352d1902d146101df57806359838a15146102075780635fd8c7101461023f57600080fd5b80633347f4c01461013a57806333932260146101515780633659cfe6146101715780633c06794514610191578063467ea9f41461019957600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061014f6103c7565b005b34801561015d57600080fd5b5061014f61016c366004612479565b61048d565b34801561017d57600080fd5b5061014f61018c36600461250c565b61053a565b61014f610622565b61014f6101a7366004612535565b6106ef565b3480156101b857600080fd5b5061014f6101c7366004612575565b6108b1565b61014f6101da3660046125ef565b610a92565b3480156101eb57600080fd5b506101f4610b62565b6040519081526020015b60405180910390f35b34801561021357600080fd5b5060fc54610227906001600160a01b031681565b6040516001600160a01b0390911681526020016101fe565b34801561024b57600080fd5b5061014f610c15565b34801561026057600080fd5b5061014f610d4d565b34801561027557600080fd5b506097546001600160a01b0316610227565b34801561029357600080fd5b506101f4610d5f565b3480156102a857600080fd5b506102bc6102b736600461269a565b610dd1565b604080516001600160a01b03909416845260208401929092521515908201526060016101fe565b3480156102ef57600080fd5b5061014f6102fe36600461250c565b610e20565b34801561030f57600080fd5b50610318610fe8565b6040516101fe91906126c4565b34801561033157600080fd5b5061033a611148565b6040516101fe9190612796565b34801561035357600080fd5b5060fb54610227906001600160a01b031681565b34801561037357600080fd5b5060fd54610227906001600160a01b031681565b34801561039357600080fd5b5061014f6103a236600461250c565b6111da565b3480156103b357600080fd5b5061014f6103c2366004612535565b611250565b33600090815260fe60205260408120805490918190036103fa57604051633b56498960e21b815260040160405180910390fd5b60005b8181101561046457828181548110610417576104176127fd565b600091825260208220600390910201546040516001600160a01b039091169133917f1de42a421eef953b12e8dffca9f7ba12e7962c982fc649e5e2c32ea0e7e3ca649190a36001016103fd565b5033600090815260fe6020526040812061047d91612415565b61048860ff33611380565b505050565b60328111156104af5760405163f9910d2b60e01b815260040160405180910390fd5b60005b818110156104885760006104ec8484848181106104d1576104d16127fd565b9050604002018036038101906104e79190612813565b61139e565b80519091506104fb5750610532565b610530848484818110610510576105106127fd565b610526926020604090920201908101915061250c565b8260200151611866565b505b6001016104b2565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361058b5760405162461bcd60e51b815260040161058290612870565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105d4600080516020613183833981519152546001600160a01b031690565b6001600160a01b0316146105fa5760405162461bcd60e51b8152600401610582906128bc565b61060381611bf7565b6040805160008082526020820190925261061f91839190611bff565b50565b60013410156106445760405163213cf26b60e01b815260040160405180910390fd5b60fb546040516371d4ed8d60e11b81523360048201526000916001600160a01b03169063e3a9db1a90602401602060405180830381865afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190612908565b9050670de0b6b3a76400006106c63483612937565b11156106e5576040516303b4225160e11b815260040160405180910390fd5b61061f3334611d6a565b6001600160a01b0383166107165760405163e6c4247b60e01b815260040160405180910390fd5b60018210156107385760405163c6388ef760e01b815260040160405180910390fd5b33600090815260fe60205260409020805460321161076957604051632990b15f60e11b815260040160405180910390fd5b60005b81548110156107d157846001600160a01b0316828281548110610791576107916127fd565b60009182526020909120600390910201546001600160a01b0316036107c95760405163e8dc2ba560e01b815260040160405180910390fd5b60010161076c565b5080546000036107e8576107e660ff33611e73565b505b604080516060810182526001600160a01b03868116825260208083018781528615159484019485528554600180820188556000888152939093209451600390910290940180546001600160a01b0319169490931693909317825591519181019190915590516002909101805460ff191691151591909117905561086b3334611d6a565b6040518381526001600160a01b0385169033907f059d7576e9633bca7696f2c9a469531f9ac98e62b3160b7fffcd804d18a7fc609060200160405180910390a350505050565b600054610100900460ff16158080156108d15750600054600160ff909116105b806108eb5750303b1580156108eb575060005460ff166001145b61094e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610582565b6000805460ff191660011790558015610971576000805461ff0019166101001790555b6001600160a01b0383166109985760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0382166109bf5760405163e6c4247b60e01b815260040160405180910390fd5b6109c7611e88565b6109cf611eb7565b60fc80546001600160a01b038086166001600160a01b03199283161790925560fd805492851692909116919091179055604051610a0b90612436565b604051809103906000f080158015610a27573d6000803e3d6000fd5b5060fb80546001600160a01b0319166001600160a01b03929092169190911790558015610488576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ada5760405162461bcd60e51b815260040161058290612870565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b23600080516020613183833981519152546001600160a01b031690565b6001600160a01b031614610b495760405162461bcd60e51b8152600401610582906128bc565b610b5282611bf7565b610b5e82826001611bff565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c025760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610582565b5060008051602061318383398151915290565b610c1d611ee6565b60fb546040516371d4ed8d60e11b81523360048201526000916001600160a01b03169063e3a9db1a90602401602060405180830381865afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a9190612908565b905080600003610cad57604051631e9acf1760e31b815260040160405180910390fd5b6040516000815233907f8ad64a0ac7700dd8425ab0499f107cb6e2cd1581d803c5b8c1c79dcb8190b1af9060200160405180910390a260fb546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b5050505050610d4b600160c955565b565b610d55611f46565b610d4b6000611fa0565b60fb546040516371d4ed8d60e11b81523360048201526000916001600160a01b03169063e3a9db1a90602401602060405180830381865afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190612908565b905090565b60fe6020528160005260406000208181548110610ded57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915060ff1683565b33600090815260fe602052604081208054909103610e5157604051633b56498960e21b815260040160405180910390fd5b60005b8154811015610fce57826001600160a01b0316828281548110610e7957610e796127fd565b60009182526020909120600390910201546001600160a01b031603610fc65781548290610ea89060019061294a565b81548110610eb857610eb86127fd565b9060005260206000209060030201828281548110610ed857610ed86127fd565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101805460ff909216151560ff199092169190911790558154829080610f3f57610f3f61295d565b60008281526020812060036000199093019283020180546001600160a01b031916815560018101829055600201805460ff19169055915582549003610f8b57610f8960ff33611380565b505b6040516001600160a01b0384169033907f1de42a421eef953b12e8dffca9f7ba12e7962c982fc649e5e2c32ea0e7e3ca6490600090a3505050565b600101610e54565b50604051633b56498960e21b815260040160405180910390fd5b60606000610ff660ff611ff2565b905060008167ffffffffffffffff811115611013576110136125a8565b60405190808252806020026020018201604052801561105957816020015b6040805180820190915260008152606060208201528152602001906001900390816110315790505b50905060005b8281101561114157600061107460ff83611ffc565b6040805180820182526001600160a01b038316808252600090815260fe602090815283822080548551818402810184019096528086529596509294818601949392909184015b82821015611114576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff1615159183019190915290835290920191016110ba565b5050505081525083838151811061112d5761112d6127fd565b60209081029190910101525060010161105f565b5092915050565b33600090815260fe60209081526040808320805482518185028101850190935280835260609492939192909184015b828210156111d1576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff161515918301919091529083529092019101611177565b50505050905090565b6111e2611f46565b6001600160a01b0381166112475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610582565b61061f81611fa0565b6001600160a01b0383166112775760405163e6c4247b60e01b815260040160405180910390fd5b33600090815260fe60205260408120905b815481101561137957846001600160a01b03168282815481106112ad576112ad6127fd565b60009182526020909120600390910201546001600160a01b03160361137157838282815481106112df576112df6127fd565b90600052602060002090600302016001018190555082828281548110611307576113076127fd565b600091825260209182902060039190910201600201805460ff1916921515929092179091556040518581526001600160a01b0387169133917f95b3377e475434fff4b527743f79205fc694d9d2f1383dc0945f103a74eabb45910160405180910390a35050505050565b600101611288565b5050505050565b6000611395836001600160a01b038416612008565b90505b92915050565b6113d160408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b815160208301516001600160a01b03821615806113f557506001600160a01b038116155b15611431575050604080518082018252600080825282516060810184528181526020818101839052938101919091529181019190915292915050565b60fd5460405163a72f179b60e01b81526001600160a01b038381163f60048301529091169063a72f179b90602401602060405180830381865afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a09190612973565b156114dc575050604080518082018252600080825282516060810184528181526020818101839052938101919091529181019190915292915050565b6001600160a01b038216600090815260fe60205260408120905b815481101561182d57826001600160a01b031682828154811061151b5761151b6127fd565b60009182526020909120600390910201546001600160a01b0316036118255781818154811061154c5761154c6127fd565b600091825260209091206002600390920201015460ff166115e157604051806040016040528060001515815260200183838154811061158d5761158d6127fd565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015460ff1615159181019190915290529695505050505050565b60fc546040516332052a9b60e01b81526001600160a01b03858116600483015260009216906332052a9b90602401602060405180830381865afa15801561162c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116509190612997565b9050828281548110611664576116646127fd565b906000526020600020906003020160010154816001600160c01b031611156117015760405180604001604052806000151581526020018484815481106116ac576116ac6127fd565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015460ff161515918101919091529052979650505050505050565b60fb546040516371d4ed8d60e11b81526001600160a01b038781166004830152600092169063e3a9db1a90602401602060405180830381865afa15801561174c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117709190612908565b905080826001600160c01b031611156117ff5760405180604001604052806000151581526020018585815481106117a9576117a96127fd565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015460ff16151591810191909152905298975050505050505050565b60405180604001604052806001151581526020018585815481106117a9576117a96127fd565b6001016114f6565b50506040805180820182526000808252825160608101845281815260208181018390529381019190915291810191909152949350505050565b8051602082015160fc546040516332052a9b60e01b81526001600160a01b03808516600483015260009216906332052a9b90602401602060405180830381865afa1580156118b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118dc9190612997565b60fb5460405163f98b209360e01b81526001600160a01b0388811660048301526001600160c01b038416602483015292935091169063f98b209390604401600060405180830381600087803b15801561193457600080fd5b505af1925050508015611945575060015b6119d457826001600160a01b0316856001600160a01b03167f1bea1426429dd9b3da9c9ea7ba8cba69ac192c6431969d36b16f67da9dd75022836040516119c791906001600160c01b0391909116815260406020820181905260149082015273496e73756666696369656e742062616c616e636560601b606082015260800190565b60405180910390a3611379565b60fc5460405163e494015760e01b81526001600160a01b0385811660048301529091169063e4940157906001600160c01b038416906024016000604051808303818588803b158015611a2557600080fd5b505af193505050508015611a37575060015b611b235760fb5460405163f340fa0160e01b81526001600160a01b0387811660048301529091169063f340fa01906001600160c01b038416906024016000604051808303818588803b158015611a8c57600080fd5b505af1158015611aa0573d6000803e3d6000fd5b5050505050826001600160a01b0316856001600160a01b03167f1bea1426429dd9b3da9c9ea7ba8cba69ac192c6431969d36b16f67da9dd75022836040516119c791906001600160c01b0391909116815260406020820181905260149082015273109a59081c1b1858d95b595b9d0819985a5b195960621b606082015260800190565b60fb546040516371d4ed8d60e11b81526001600160a01b038781166004830152600092169063e3a9db1a90602401602060405180830381865afa158015611b6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b929190612908565b604080516001600160c01b0385168152602081018690529081018290529091506001600160a01b0380861691908816907fd8c744a00b9e0131cbbabb5774cdf1db85f1ee81c1aada72b5c667b6168da7b89060600160405180910390a3505050505050565b61061f611f46565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611c3257610488836120fb565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c8c575060408051601f3d908101601f19168201909252611c8991810190612908565b60015b611cef5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610582565b6000805160206131838339815191528114611d5e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610582565b50610488838383612197565b60fb5460405163f340fa0160e01b81526001600160a01b0384811660048301529091169063f340fa019083906024016000604051808303818588803b158015611db257600080fd5b505af1158015611dc6573d6000803e3d6000fd5b505060fb546040516371d4ed8d60e11b81526001600160a01b038781166004830181905295507f8ad64a0ac7700dd8425ab0499f107cb6e2cd1581d803c5b8c1c79dcb8190b1af9450909116915063e3a9db1a90602401602060405180830381865afa158015611e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5e9190612908565b60405190815260200160405180910390a25050565b6000611395836001600160a01b0384166121c2565b600054610100900460ff16611eaf5760405162461bcd60e51b8152600401610582906129c0565b610d4b612211565b600054610100900460ff16611ede5760405162461bcd60e51b8152600401610582906129c0565b610d4b612241565b600260c95403611f385760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610582565b600260c955565b600160c955565b6097546001600160a01b03163314610d4b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610582565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611398825490565b60006113958383612268565b600081815260018301602052604081205480156120f157600061202c60018361294a565b85549091506000906120409060019061294a565b90508181146120a5576000866000018281548110612060576120606127fd565b9060005260206000200154905080876000018481548110612083576120836127fd565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806120b6576120b661295d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611398565b6000915050611398565b6001600160a01b0381163b6121685760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610582565b60008051602061318383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6121a083612292565b6000825111806121ad5750805b15610488576121bc83836122d2565b50505050565b600081815260018301602052604081205461220957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611398565b506000611398565b600054610100900460ff166122385760405162461bcd60e51b8152600401610582906129c0565b610d4b33611fa0565b600054610100900460ff16611f3f5760405162461bcd60e51b8152600401610582906129c0565b600082600001828154811061227f5761227f6127fd565b9060005260206000200154905092915050565b61229b816120fb565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061139583836040518060600160405280602781526020016131a3602791396060600080856001600160a01b03168560405161230f9190612a2f565b600060405180830381855af49150503d806000811461234a576040519150601f19603f3d011682016040523d82523d6000602084013e61234f565b606091505b50915091506123608683838761236a565b9695505050505050565b606083156123d95782516000036123d2576001600160a01b0385163b6123d25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610582565b50816123e3565b6123e383836123eb565b949350505050565b8151156123fb5781518083602001fd5b8060405162461bcd60e51b81526004016105829190612a4b565b508054600082556003029060005260206000209081019061061f9190612443565b61070480612a7f83390190565b5b808211156124755780546001600160a01b03191681556000600182015560028101805460ff19169055600301612444565b5090565b6000806020838503121561248c57600080fd5b823567ffffffffffffffff8111156124a357600080fd5b8301601f810185136124b457600080fd5b803567ffffffffffffffff8111156124cb57600080fd5b8560208260061b84010111156124e057600080fd5b6020919091019590945092505050565b80356001600160a01b038116811461250757600080fd5b919050565b60006020828403121561251e57600080fd5b611395826124f0565b801515811461061f57600080fd5b60008060006060848603121561254a57600080fd5b612553846124f0565b925060208401359150604084013561256a81612527565b809150509250925092565b6000806040838503121561258857600080fd5b612591836124f0565b915061259f602084016124f0565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156125e7576125e76125a8565b604052919050565b6000806040838503121561260257600080fd5b61260b836124f0565b9150602083013567ffffffffffffffff81111561262757600080fd5b8301601f8101851361263857600080fd5b803567ffffffffffffffff811115612652576126526125a8565b612665601f8201601f19166020016125be565b81815286602083850101111561267a57600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080604083850312156126ad57600080fd5b6126b6836124f0565b946020939093013593505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561278a57868503603f19018452815180516001600160a01b031686526020908101516040828801819052815190880181905291019060009060608801905b8083101561277257835180516001600160a01b031683526020808201519084015260409081015115159083015260608201915060208401935060018301925061272e565b509650505060209384019391909101906001016126ec565b50929695505050505050565b602080825282518282018190526000918401906040840190835b818110156127f257835180516001600160a01b0316845260208082015190850152604090810151151590840152606083016020949094019392506001016127b0565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b6000604082840312801561282657600080fd5b506040805190810167ffffffffffffffff8111828210171561284a5761284a6125a8565b604052612856836124f0565b8152612864602084016124f0565b60208201529392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561291a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561139857611398612921565b8181038181111561139857611398612921565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561298557600080fd5b815161299081612527565b9392505050565b6000602082840312156129a957600080fd5b81516001600160c01b038116811461299057600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015612a26578181015183820152602001612a0e565b50506000910152565b60008251612a41818460208701612a0b565b9190910192915050565b6020815260008251806020840152612a6a816040850160208701612a0b565b601f01601f1916919091016040019291505056fe6080604052348015600f57600080fd5b50601733601b565b606b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61068a8061007a6000396000f3fe6080604052600436106100705760003560e01c8063e3a9db1a1161004e578063e3a9db1a146100d9578063f2fde38b1461011d578063f340fa011461013d578063f98b20931461015057600080fd5b806351cff8d914610075578063715018a6146100975780638da5cb5b146100ac575b600080fd5b34801561008157600080fd5b506100956100903660046105c2565b610170565b005b3480156100a357600080fd5b506100956101e7565b3480156100b857600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b5061010f6100f43660046105c2565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100d0565b34801561012957600080fd5b506100956101383660046105c2565b6101fb565b61009561014b3660046105c2565b610279565b34801561015c57600080fd5b5061009561016b3660046105e6565b6102eb565b6101786103e5565b6001600160a01b03811660008181526001602052604081208054919055906101a0908261043f565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101db91815260200190565b60405180910390a25050565b6101ef6103e5565b6101f9600061055d565b565b6102036103e5565b6001600160a01b03811661026d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102768161055d565b50565b6102816103e5565b6001600160a01b0381166000908152600160205260408120805434928392916102ab908490610628565b90915550506040518181526001600160a01b038316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020016101db565b6102f36103e5565b6001600160a01b038216600090815260016020526040902054808211156103555760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b6044820152606401610264565b61035f8282610641565b6001600160a01b03841660009081526001602052604090205561039d8261038e6000546001600160a01b031690565b6001600160a01b03169061043f565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516103d891815260200190565b60405180910390a2505050565b6000546001600160a01b031633146101f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610264565b8047101561048f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610264565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104dc576040519150601f19603f3d011682016040523d82523d6000602084013e6104e1565b606091505b50509050806105585760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610264565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461027657600080fd5b6000602082840312156105d457600080fd5b81356105df816105ad565b9392505050565b600080604083850312156105f957600080fd5b8235610604816105ad565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561063b5761063b610612565b92915050565b8181038181111561063b5761063b61061256fea26469706673582212200715fe56678fec15dbf75729b10287919d6637b5ecb0829024d62e0e631e944564736f6c634300081e0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220161f7fc5ef0fcdf46f9639e7eaae3f09494a2021213b401d3f007105c8bd198464736f6c634300081e0033";

type CacheManagerAutomationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CacheManagerAutomationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CacheManagerAutomation__factory extends ContractFactory {
  constructor(...args: CacheManagerAutomationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CacheManagerAutomation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CacheManagerAutomation__factory {
    return super.connect(runner) as CacheManagerAutomation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CacheManagerAutomationInterface {
    return new Interface(_abi) as CacheManagerAutomationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CacheManagerAutomation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CacheManagerAutomation;
  }
}
