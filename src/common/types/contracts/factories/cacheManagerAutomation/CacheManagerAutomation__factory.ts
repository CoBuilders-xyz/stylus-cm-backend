/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CacheManagerAutomation,
  CacheManagerAutomationInterface,
} from "../../cacheManagerAutomation/CacheManagerAutomation";

const _abi = [
  {
    inputs: [],
    name: "ContractAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceedsMaxUserFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBid",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFundAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyBids",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyContracts",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "BalanceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "BidAttempted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "BidDetails",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "BidError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userBalance",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
    ],
    name: "ContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ContractOperationPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "ContractRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "step",
        type: "string",
      },
    ],
    name: "DebugBidCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint192",
        name: "minBid",
        type: "uint192",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "DebugMinBidFetch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
    ],
    name: "MinBidCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalContracts",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "successfulBids",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "failedBids",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UpkeepPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "operation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UserBalanceOperation",
    type: "event",
  },
  {
    inputs: [],
    name: "arbWasmCache",
    outputs: [
      {
        internalType: "contract IArbWasmCache",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cacheManager",
    outputs: [
      {
        internalType: "contract ICacheManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "escrow",
    outputs: [
      {
        internalType: "contract BiddingEscrow",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContracts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxBid",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "enabled",
                type: "bool",
              },
            ],
            internalType: "struct ICacheManagerAutomationV2.ContractConfig[]",
            name: "contracts",
            type: "tuple[]",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.UserContractsData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getContractsPaginated",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxBid",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "enabled",
                type: "bool",
              },
            ],
            internalType: "struct ICacheManagerAutomationV2.ContractConfig[]",
            name: "contracts",
            type: "tuple[]",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.UserContractsData[]",
        name: "userData",
        type: "tuple[]",
      },
      {
        internalType: "bool",
        name: "hasMore",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalUsersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getUserAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserContracts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxBid",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.ContractConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cacheManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbWasmCache",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "insertContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
        ],
        internalType: "struct ICacheManagerAutomationV2.BidRequest[]",
        name: "_bidRequests",
        type: "tuple[]",
      },
    ],
    name: "placeBids",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAllContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "removeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "updateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userContracts",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxBid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015601357600080fd5b5060805161355761004b600039600081816105d90152818161062201528181610d3801528181610d780152610e0b01526135576000f3fe60806040526004361061014f5760003560e01c8063715018a6116100b6578063dfc41f441161006f578063dfc41f4414610389578063e2fdcc17146103ab578063e8cc05d7146103cb578063f2fde38b146103eb578063fb5842f31461040b578063ffcc7bbf1461042b57600080fd5b8063715018a6146102b85780638da5cb5b146102cd578063b7013dc1146102eb578063b789003d14610300578063c375c2ef14610347578063c3a2a93a1461036757600080fd5b8063483ece0611610108578063483ece06146101f5578063485cc955146102235780634f1ef2861461024357806352d1902d1461025657806359838a151461026b5780635fd8c710146102a357600080fd5b80630561010c1461015b5780633347f4c014610183578063339322601461019a5780633659cfe6146101ba5780633c067945146101da578063467ea9f4146101e257600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061017061044b565b6040519081526020015b60405180910390f35b34801561018f57600080fd5b5061019861045c565b005b3480156101a657600080fd5b506101986101b536600461276f565b610522565b3480156101c657600080fd5b506101986101d5366004612802565b6105cf565b6101986106b7565b6101986101f036600461282b565b610784565b34801561020157600080fd5b5061021561021036600461286b565b610946565b60405161017a929190612956565b34801561022f57600080fd5b5061019861023e36600461297a565b610b4d565b6101986102513660046129f4565b610d2e565b34801561026257600080fd5b50610170610dfe565b34801561027757600080fd5b5060fc5461028b906001600160a01b031681565b6040516001600160a01b03909116815260200161017a565b3480156102af57600080fd5b50610198610eb1565b3480156102c457600080fd5b50610198610fe9565b3480156102d957600080fd5b506097546001600160a01b031661028b565b3480156102f757600080fd5b50610170610ffb565b34801561030c57600080fd5b5061032061031b366004612a9f565b611068565b604080516001600160a01b039094168452602084019290925215159082015260600161017a565b34801561035357600080fd5b50610198610362366004612802565b6110b7565b34801561037357600080fd5b5061037c61127f565b60405161017a9190612ac9565b34801561039557600080fd5b5061039e6113df565b60405161017a9190612adc565b3480156103b757600080fd5b5060fb5461028b906001600160a01b031681565b3480156103d757600080fd5b5060fd5461028b906001600160a01b031681565b3480156103f757600080fd5b50610198610406366004612802565b611471565b34801561041757600080fd5b5061019861042636600461282b565b6114e7565b34801561043757600080fd5b5061028b610446366004612b43565b611617565b600061045760ff611678565b905090565b33600090815260fe602052604081208054909181900361048f57604051633b56498960e21b815260040160405180910390fd5b60005b818110156104f9578281815481106104ac576104ac612b5c565b600091825260208220600390910201546040516001600160a01b039091169133917f1de42a421eef953b12e8dffca9f7ba12e7962c982fc649e5e2c32ea0e7e3ca649190a3600101610492565b5033600090815260fe602052604081206105129161270b565b61051d60ff33611682565b505050565b60328111156105445760405163f9910d2b60e01b815260040160405180910390fd5b60005b8181101561051d57600061058184848481811061056657610566612b5c565b90506040020180360381019061057c9190612b72565b61169e565b805190915061059057506105c7565b6105c58484848181106105a5576105a5612b5c565b6105bb9260206040909202019081019150612802565b8260200151611b66565b505b600101610547565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106205760405162461bcd60e51b815260040161061790612bcf565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106696000805160206134db833981519152546001600160a01b031690565b6001600160a01b03161461068f5760405162461bcd60e51b815260040161061790612c1b565b61069881611ef7565b604080516000808252602082019092526106b491839190611eff565b50565b60013410156106d95760405163213cf26b60e01b815260040160405180910390fd5b60fb546040516371d4ed8d60e11b81523360048201526000916001600160a01b03169063e3a9db1a90602401602060405180830381865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190612c67565b9050670de0b6b3a764000061075b3483612c96565b111561077a576040516303b4225160e11b815260040160405180910390fd5b6106b4333461206a565b6001600160a01b0383166107ab5760405163e6c4247b60e01b815260040160405180910390fd5b60018210156107cd5760405163c6388ef760e01b815260040160405180910390fd5b33600090815260fe6020526040902080546032116107fe57604051632990b15f60e11b815260040160405180910390fd5b60005b815481101561086657846001600160a01b031682828154811061082657610826612b5c565b60009182526020909120600390910201546001600160a01b03160361085e5760405163e8dc2ba560e01b815260040160405180910390fd5b600101610801565b50805460000361087d5761087b60ff33612173565b505b604080516060810182526001600160a01b03868116825260208083018781528615159484019485528554600180820188556000888152939093209451600390910290940180546001600160a01b0319169490931693909317825591519181019190915590516002909101805460ff1916911515919091179055610900333461206a565b6040518381526001600160a01b0385169033907f059d7576e9633bca7696f2c9a469531f9ac98e62b3160b7fffcd804d18a7fc609060200160405180910390a350505050565b606060008061095560ff611678565b90508085106109a957604080516000808252602082019092529061099c565b6040805180820190915260008152606060208201528152602001906001900390816109745790505b5060009250925050610b46565b60648415806109b757508085115b156109c0578094505b60006109cc8784612ca9565b905060008682106109dd57866109df565b815b90508067ffffffffffffffff8111156109fa576109fa6129ad565b604051908082528060200260200182016040528015610a4057816020015b604080518082019091526000815260606020820152815260200190600190039081610a185790505b50955060005b81811015610b32576000610a65610a5d838c612c96565b60ff90612188565b6040805180820182526001600160a01b038316808252600090815260fe602090815283822080548551818402810184019096528086529596509294818601949392909184015b82821015610b05576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff161515918301919091529083529092019101610aab565b50505050815250888381518110610b1e57610b1e612b5c565b602090810291909101015250600101610a46565b5083610b3e828a612c96565b109450505050505b9250929050565b600054610100900460ff1615808015610b6d5750600054600160ff909116105b80610b875750303b158015610b87575060005460ff166001145b610bea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610617565b6000805460ff191660011790558015610c0d576000805461ff0019166101001790555b6001600160a01b038316610c345760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b038216610c5b5760405163e6c4247b60e01b815260040160405180910390fd5b610c63612194565b610c6b6121c3565b60fc80546001600160a01b038086166001600160a01b03199283161790925560fd805492851692909116919091179055604051610ca79061272c565b604051809103906000f080158015610cc3573d6000803e3d6000fd5b5060fb80546001600160a01b0319166001600160a01b0392909216919091179055801561051d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610d765760405162461bcd60e51b815260040161061790612bcf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610dbf6000805160206134db833981519152546001600160a01b031690565b6001600160a01b031614610de55760405162461bcd60e51b815260040161061790612c1b565b610dee82611ef7565b610dfa82826001611eff565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e9e5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610617565b506000805160206134db83398151915290565b610eb96121f2565b60fb546040516371d4ed8d60e11b81523360048201526000916001600160a01b03169063e3a9db1a90602401602060405180830381865afa158015610f02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f269190612c67565b905080600003610f4957604051631e9acf1760e31b815260040160405180910390fd5b6040516000815233907f8ad64a0ac7700dd8425ab0499f107cb6e2cd1581d803c5b8c1c79dcb8190b1af9060200160405180910390a260fb546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b158015610fc457600080fd5b505af1158015610fd8573d6000803e3d6000fd5b5050505050610fe7600160c955565b565b610ff1612252565b610fe760006122ac565b60fb546040516371d4ed8d60e11b81523360048201526000916001600160a01b03169063e3a9db1a90602401602060405180830381865afa158015611044573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190612c67565b60fe602052816000526040600020818154811061108457600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915060ff1683565b33600090815260fe6020526040812080549091036110e857604051633b56498960e21b815260040160405180910390fd5b60005b815481101561126557826001600160a01b031682828154811061111057611110612b5c565b60009182526020909120600390910201546001600160a01b03160361125d578154829061113f90600190612ca9565b8154811061114f5761114f612b5c565b906000526020600020906003020182828154811061116f5761116f612b5c565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101805460ff909216151560ff1990921691909117905581548290806111d6576111d6612cbc565b60008281526020812060036000199093019283020180546001600160a01b031916815560018101829055600201805460ff191690559155825490036112225761122060ff33611682565b505b6040516001600160a01b0384169033907f1de42a421eef953b12e8dffca9f7ba12e7962c982fc649e5e2c32ea0e7e3ca6490600090a3505050565b6001016110eb565b50604051633b56498960e21b815260040160405180910390fd5b6060600061128d60ff611678565b905060008167ffffffffffffffff8111156112aa576112aa6129ad565b6040519080825280602002602001820160405280156112f057816020015b6040805180820190915260008152606060208201528152602001906001900390816112c85790505b50905060005b828110156113d857600061130b60ff83612188565b6040805180820182526001600160a01b038316808252600090815260fe602090815283822080548551818402810184019096528086529596509294818601949392909184015b828210156113ab576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff161515918301919091529083529092019101611351565b505050508152508383815181106113c4576113c4612b5c565b6020908102919091010152506001016112f6565b5092915050565b33600090815260fe60209081526040808320805482518185028101850190935280835260609492939192909184015b82821015611468576000848152602090819020604080516060810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff16151591830191909152908352909201910161140e565b50505050905090565b611479612252565b6001600160a01b0381166114de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610617565b6106b4816122ac565b6001600160a01b03831661150e5760405163e6c4247b60e01b815260040160405180910390fd5b33600090815260fe60205260408120905b815481101561161057846001600160a01b031682828154811061154457611544612b5c565b60009182526020909120600390910201546001600160a01b031603611608578382828154811061157657611576612b5c565b9060005260206000209060030201600101819055508282828154811061159e5761159e612b5c565b600091825260209182902060039190910201600201805460ff1916921515929092179091556040518581526001600160a01b0387169133917f95b3377e475434fff4b527743f79205fc694d9d2f1383dc0945f103a74eabb45910160405180910390a35050505050565b60010161151f565b5050505050565b600061162360ff611678565b82106116675760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610617565b61167260ff83612188565b92915050565b6000611672825490565b6000611697836001600160a01b0384166122fe565b9392505050565b6116d160408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b815160208301516001600160a01b03821615806116f557506001600160a01b038116155b15611731575050604080518082018252600080825282516060810184528181526020818101839052938101919091529181019190915292915050565b60fd5460405163a72f179b60e01b81526001600160a01b038381163f60048301529091169063a72f179b90602401602060405180830381865afa15801561177c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a09190612cd2565b156117dc575050604080518082018252600080825282516060810184528181526020818101839052938101919091529181019190915292915050565b6001600160a01b038216600090815260fe60205260408120905b8154811015611b2d57826001600160a01b031682828154811061181b5761181b612b5c565b60009182526020909120600390910201546001600160a01b031603611b255781818154811061184c5761184c612b5c565b600091825260209091206002600390920201015460ff166118e157604051806040016040528060001515815260200183838154811061188d5761188d612b5c565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015460ff1615159181019190915290529695505050505050565b60fc546040516332052a9b60e01b81526001600160a01b03858116600483015260009216906332052a9b90602401602060405180830381865afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119509190612cef565b905082828154811061196457611964612b5c565b906000526020600020906003020160010154816001600160c01b03161115611a015760405180604001604052806000151581526020018484815481106119ac576119ac612b5c565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015460ff161515918101919091529052979650505050505050565b60fb546040516371d4ed8d60e11b81526001600160a01b038781166004830152600092169063e3a9db1a90602401602060405180830381865afa158015611a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a709190612c67565b905080826001600160c01b03161115611aff576040518060400160405280600015158152602001858581548110611aa957611aa9612b5c565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015460ff16151591810191909152905298975050505050505050565b6040518060400160405280600115158152602001858581548110611aa957611aa9612b5c565b6001016117f6565b50506040805180820182526000808252825160608101845281815260208181018390529381019190915291810191909152949350505050565b8051602082015160fc546040516332052a9b60e01b81526001600160a01b03808516600483015260009216906332052a9b90602401602060405180830381865afa158015611bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bdc9190612cef565b60fb5460405163f98b209360e01b81526001600160a01b0388811660048301526001600160c01b038416602483015292935091169063f98b209390604401600060405180830381600087803b158015611c3457600080fd5b505af1925050508015611c45575060015b611cd457826001600160a01b0316856001600160a01b03167f1bea1426429dd9b3da9c9ea7ba8cba69ac192c6431969d36b16f67da9dd7502283604051611cc791906001600160c01b0391909116815260406020820181905260149082015273496e73756666696369656e742062616c616e636560601b606082015260800190565b60405180910390a3611610565b60fc5460405163e494015760e01b81526001600160a01b0385811660048301529091169063e4940157906001600160c01b038416906024016000604051808303818588803b158015611d2557600080fd5b505af193505050508015611d37575060015b611e235760fb5460405163f340fa0160e01b81526001600160a01b0387811660048301529091169063f340fa01906001600160c01b038416906024016000604051808303818588803b158015611d8c57600080fd5b505af1158015611da0573d6000803e3d6000fd5b5050505050826001600160a01b0316856001600160a01b03167f1bea1426429dd9b3da9c9ea7ba8cba69ac192c6431969d36b16f67da9dd7502283604051611cc791906001600160c01b0391909116815260406020820181905260149082015273109a59081c1b1858d95b595b9d0819985a5b195960621b606082015260800190565b60fb546040516371d4ed8d60e11b81526001600160a01b038781166004830152600092169063e3a9db1a90602401602060405180830381865afa158015611e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e929190612c67565b604080516001600160c01b0385168152602081018690529081018290529091506001600160a01b0380861691908816907fd8c744a00b9e0131cbbabb5774cdf1db85f1ee81c1aada72b5c667b6168da7b89060600160405180910390a3505050505050565b6106b4612252565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611f325761051d836123f1565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f8c575060408051601f3d908101601f19168201909252611f8991810190612c67565b60015b611fef5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610617565b6000805160206134db833981519152811461205e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610617565b5061051d83838361248d565b60fb5460405163f340fa0160e01b81526001600160a01b0384811660048301529091169063f340fa019083906024016000604051808303818588803b1580156120b257600080fd5b505af11580156120c6573d6000803e3d6000fd5b505060fb546040516371d4ed8d60e11b81526001600160a01b038781166004830181905295507f8ad64a0ac7700dd8425ab0499f107cb6e2cd1581d803c5b8c1c79dcb8190b1af9450909116915063e3a9db1a90602401602060405180830381865afa15801561213a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215e9190612c67565b60405190815260200160405180910390a25050565b6000611697836001600160a01b0384166124b8565b60006116978383612507565b600054610100900460ff166121bb5760405162461bcd60e51b815260040161061790612d18565b610fe7612531565b600054610100900460ff166121ea5760405162461bcd60e51b815260040161061790612d18565b610fe7612561565b600260c954036122445760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610617565b600260c955565b600160c955565b6097546001600160a01b03163314610fe75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610617565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081815260018301602052604081205480156123e7576000612322600183612ca9565b855490915060009061233690600190612ca9565b905081811461239b57600086600001828154811061235657612356612b5c565b906000526020600020015490508087600001848154811061237957612379612b5c565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806123ac576123ac612cbc565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611672565b6000915050611672565b6001600160a01b0381163b61245e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610617565b6000805160206134db83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61249683612588565b6000825111806124a35750805b1561051d576124b283836125c8565b50505050565b60008181526001830160205260408120546124ff57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611672565b506000611672565b600082600001828154811061251e5761251e612b5c565b9060005260206000200154905092915050565b600054610100900460ff166125585760405162461bcd60e51b815260040161061790612d18565b610fe7336122ac565b600054610100900460ff1661224b5760405162461bcd60e51b815260040161061790612d18565b612591816123f1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061169783836040518060600160405280602781526020016134fb602791396060600080856001600160a01b0316856040516126059190612d87565b600060405180830381855af49150503d8060008114612640576040519150601f19603f3d011682016040523d82523d6000602084013e612645565b606091505b509150915061265686838387612660565b9695505050505050565b606083156126cf5782516000036126c8576001600160a01b0385163b6126c85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610617565b50816126d9565b6126d983836126e1565b949350505050565b8151156126f15781518083602001fd5b8060405162461bcd60e51b81526004016106179190612da3565b50805460008255600302906000526020600020908101906106b49190612739565b61070480612dd783390190565b5b8082111561276b5780546001600160a01b03191681556000600182015560028101805460ff1916905560030161273a565b5090565b6000806020838503121561278257600080fd5b823567ffffffffffffffff81111561279957600080fd5b8301601f810185136127aa57600080fd5b803567ffffffffffffffff8111156127c157600080fd5b8560208260061b84010111156127d657600080fd5b6020919091019590945092505050565b80356001600160a01b03811681146127fd57600080fd5b919050565b60006020828403121561281457600080fd5b611697826127e6565b80151581146106b457600080fd5b60008060006060848603121561284057600080fd5b612849846127e6565b92506020840135915060408401356128608161281d565b809150509250925092565b6000806040838503121561287e57600080fd5b50508035926020909101359150565b600082825180855260208501945060208160051b8301016020850160005b8381101561294a57848303601f19018852815180516001600160a01b031684526020908101516040828601819052815190860181905291019060009060608601905b8083101561293157835180516001600160a01b03168352602080820151908401526040908101511515908301526060820191506020840193506001830192506128ed565b5060209a8b019a909550939093019250506001016128ab565b50909695505050505050565b604081526000612969604083018561288d565b905082151560208301529392505050565b6000806040838503121561298d57600080fd5b612996836127e6565b91506129a4602084016127e6565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156129ec576129ec6129ad565b604052919050565b60008060408385031215612a0757600080fd5b612a10836127e6565b9150602083013567ffffffffffffffff811115612a2c57600080fd5b8301601f81018513612a3d57600080fd5b803567ffffffffffffffff811115612a5757612a576129ad565b612a6a601f8201601f19166020016129c3565b818152866020838501011115612a7f57600080fd5b816020840160208301376000602083830101528093505050509250929050565b60008060408385031215612ab257600080fd5b612abb836127e6565b946020939093013593505050565b602081526000611697602083018461288d565b602080825282518282018190526000918401906040840190835b81811015612b3857835180516001600160a01b031684526020808201519085015260409081015115159084015260608301602094909401939250600101612af6565b509095945050505050565b600060208284031215612b5557600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60006040828403128015612b8557600080fd5b506040805190810167ffffffffffffffff81118282101715612ba957612ba96129ad565b604052612bb5836127e6565b8152612bc3602084016127e6565b60208201529392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215612c7957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561167257611672612c80565b8181038181111561167257611672612c80565b634e487b7160e01b600052603160045260246000fd5b600060208284031215612ce457600080fd5b81516116978161281d565b600060208284031215612d0157600080fd5b81516001600160c01b038116811461169757600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015612d7e578181015183820152602001612d66565b50506000910152565b60008251612d99818460208701612d63565b9190910192915050565b6020815260008251806020840152612dc2816040850160208701612d63565b601f01601f1916919091016040019291505056fe6080604052348015600f57600080fd5b50601733601b565b606b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61068a8061007a6000396000f3fe6080604052600436106100705760003560e01c8063e3a9db1a1161004e578063e3a9db1a146100d9578063f2fde38b1461011d578063f340fa011461013d578063f98b20931461015057600080fd5b806351cff8d914610075578063715018a6146100975780638da5cb5b146100ac575b600080fd5b34801561008157600080fd5b506100956100903660046105c2565b610170565b005b3480156100a357600080fd5b506100956101e7565b3480156100b857600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100e557600080fd5b5061010f6100f43660046105c2565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100d0565b34801561012957600080fd5b506100956101383660046105c2565b6101fb565b61009561014b3660046105c2565b610279565b34801561015c57600080fd5b5061009561016b3660046105e6565b6102eb565b6101786103e5565b6001600160a01b03811660008181526001602052604081208054919055906101a0908261043f565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101db91815260200190565b60405180910390a25050565b6101ef6103e5565b6101f9600061055d565b565b6102036103e5565b6001600160a01b03811661026d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102768161055d565b50565b6102816103e5565b6001600160a01b0381166000908152600160205260408120805434928392916102ab908490610628565b90915550506040518181526001600160a01b038316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020016101db565b6102f36103e5565b6001600160a01b038216600090815260016020526040902054808211156103555760405162461bcd60e51b8152602060048201526016602482015275416d6f756e7420657863656564732062616c616e636560501b6044820152606401610264565b61035f8282610641565b6001600160a01b03841660009081526001602052604090205561039d8261038e6000546001600160a01b031690565b6001600160a01b03169061043f565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516103d891815260200190565b60405180910390a2505050565b6000546001600160a01b031633146101f95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610264565b8047101561048f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610264565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104dc576040519150601f19603f3d011682016040523d82523d6000602084013e6104e1565b606091505b50509050806105585760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610264565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461027657600080fd5b6000602082840312156105d457600080fd5b81356105df816105ad565b9392505050565b600080604083850312156105f957600080fd5b8235610604816105ad565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561063b5761063b610612565b92915050565b8181038181111561063b5761063b61061256fea26469706673582212200715fe56678fec15dbf75729b10287919d6637b5ecb0829024d62e0e631e944564736f6c634300081e0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122089274ddcb6c609a861639de2ebe6eb48667345ef826ecbaab1e18fb37f9c25e064736f6c634300081e0033";

type CacheManagerAutomationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CacheManagerAutomationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CacheManagerAutomation__factory extends ContractFactory {
  constructor(...args: CacheManagerAutomationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CacheManagerAutomation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CacheManagerAutomation__factory {
    return super.connect(runner) as CacheManagerAutomation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CacheManagerAutomationInterface {
    return new Interface(_abi) as CacheManagerAutomationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CacheManagerAutomation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CacheManagerAutomation;
  }
}
